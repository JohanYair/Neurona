#include <QCoreApplication>
#include <iostream>
#include <vector>

class Neurona {
private:
    int id;
    double voltaje;
    int posicion_x;
    int posicion_y;
    int red;
    int green;
    int blue;

public:
    Neurona(int id, double voltaje, int posicion_x, int posicion_y, int red, int green, int blue)
        : id(id), voltaje(voltaje), posicion_x(posicion_x), posicion_y(posicion_y), red(red), green(green), blue(blue) {}

    void imprimir() const{
        std::cout << "Neurona(ID: " << id << ", Voltaje: " << voltaje
                  << ", Posicion: (" << posicion_x << ", " << posicion_y
                  << "), RGB: (" << red << ", " << green << ", " << blue << "))" << std::endl;
    }
};

class AdministradorNeuronas {
private:
    std::vector<Neurona> neuronas;

public:
    void agregar_inicio(const Neurona& neurona) {
        neuronas.insert(neuronas.begin(), neurona);
    }

    void agregar_final(const Neurona& neurona) {
        neuronas.push_back(neurona);
    }

    void mostrar() {
        for (const auto& neurona : neuronas) {
            neurona.imprimir();
        }
    }
};

int main() {
    AdministradorNeuronas admin;
    Neurona neurona1(1, 3.5, 10, 20, 255, 0, 0);
    Neurona neurona2(2, 2.7, 15, 25, 0, 255, 0);
    admin.agregar_inicio(neurona1);
    admin.agregar_final(neurona2);
    admin.mostrar();

    return 0;
}
